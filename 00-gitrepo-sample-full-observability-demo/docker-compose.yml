version: '3.8'

services:
  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - purely-network

  service-discovery:
    image: openjdk:17-jdk
    container_name: service-discovery
    volumes:
      - ./jars/service-registry.jar:/app.jar
    command: ["java", "-jar", "/app.jar"]
    ports:
      - "8761:8761"
    networks:
      - purely-network

  api-gateway:
    image: openjdk:17-jdk
    container_name: api-gateway
    volumes:
      - ./jars/api-gateway.jar:/app.jar
    command: ["java", "-jar", "/app.jar"]
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8080:8080"
    depends_on:
      - service-discovery
    networks:
      - purely-network

  auth-service:
    image: openjdk:17-jdk
    container_name: auth-service
    volumes:
      - ./jars/auth-service.jar:/app.jar
    command: ["java", "-jar", "/app.jar"]
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/purely_auth_service
    ports:
      - "9030:9030"
    depends_on:
      - mongodb
      - service-discovery
    networks:
      - purely-network

  user-service:
    image: openjdk:17-jdk
    container_name: user-service
    volumes:
      - ./jars/user-service.jar:/app.jar
    command: ["java", "-jar", "/app.jar"]
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/purely_user_service
    ports:
      - "9050:9050"
    depends_on:
      - mongodb
      - service-discovery
    networks:
      - purely-network

  product-service:
    image: openjdk:17-jdk
    container_name: product-service
    volumes:
      - ./jars/product-service.jar:/app.jar
    command: ["java", "-jar", "/app.jar"]
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/purely_product_service
    ports:
      - "9040:9040"
    depends_on:
      - mongodb
      - service-discovery
    networks:
      - purely-network

  cart-service:
    image: openjdk:17-jdk
    container_name: cart-service
    volumes:
      - ./jars/cart-service.jar:/app.jar
    command: ["java", "-jar", "/app.jar"]
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/purely_cart_service
    ports:
      - "9060:9060"
    depends_on:
      - mongodb
      - service-discovery
    networks:
      - purely-network

  category-service:
    image: openjdk:17-jdk
    container_name: category-service
    volumes:
      - ./jars/category-service.jar:/app.jar
    command: ["java", "-jar", "/app.jar"]
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/purely_category_service
    ports:
      - "9070:9070"
    depends_on:
      - mongodb
      - service-discovery
    networks:
      - purely-network

  order-service:
    image: openjdk:17-jdk
    container_name: order-service
    volumes:
      - ./jars/order-service.jar:/app.jar
    command: ["java", "-jar", "/app.jar"]
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/purely_order_service
    ports:
      - "9080:9080"
    depends_on:
      - mongodb
      - service-discovery
    networks:
      - purely-network

  notification-service:
    image: openjdk:17-jdk
    container_name: notification-service
    volumes:
      - ./jars/notification-service.jar:/app.jar
    command: ["java", "-jar", "/app.jar"]
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "9020:9020"
    depends_on:
      - service-discovery
    networks:
      - purely-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    ports:
      - "80:80"
    networks:
      - purely-network

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    command:
      - '-nginx.scrape-uri=http://nginx:80/stub_status'
    ports:
      - "9113:9113"
    depends_on:
      - nginx
    networks:
      - purely-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - auth-service
      - product-service
      - cart-service
      - category-service
      - order-service
      - notification-service
      - user-service
      - api-gateway
      - nginx-exporter
      - blackbox-exporter
      - node-exporter
    networks:
      - purely-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - purely-network

  blackbox-exporter:
    image: prom/blackbox-exporter
    container_name: blackbox-exporter
    ports:
      - "9115:9115"
    networks:
      - purely-network

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - purely-network

  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - purely-network

  promtail:
    image: grafana/promtail:2.9.4
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - ./promtail/promtail-config.yaml:/etc/promtail/config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    networks:
      - purely-network

volumes:
  mongo_data:

networks:
  purely-network:
    driver: bridge
