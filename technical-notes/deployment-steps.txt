Step-by-Step Deployment Guide
=================================================
1. Prepare Your Project Structure
-------------------------------------------------------
Organize your project directory as follows:

```
project-root/
│
├── jars/                  # All your microservice JARs
│     ├── auth-service.jar
│     ├── product-service.jar
│     ├── user-service.jar
│     ├── cart-service.jar
│     ├── category-service.jar
│     ├── order-service.jar
│     ├── notification-service.jar
│     ├── api-gateway.jar
│     └── service-registry.jar
│
├── frontend/
│     ├── dist/            # Your React build output (after npm run build)
│     └── ...              # (source files, optional)
│
├── nginx/
│     └── nginx.conf       # Nginx config (see previous messages)
│
├── prometheus/
│     └── prometheus.yml   # Prometheus config (see previous messages)
│
├── docker-compose.yml     # The full compose file
└── ...

2. Build Your Microservice JARs
-------------------------------------------------------
For each microservice, run:
cd /path/to/microservice
mvn clean package -DskipTests
```
Copy the resulting `target/*.jar` into the `jars/` directory in your project root.


3. Build Your React Frontend
-------------------------------------------------------
cd frontend
npm install
npm run build

This will create a dist/ directory inside frontend/.

4. Prepare Nginx Config
-------------------------------------------------------
Place the provided nginx.conf in the nginx/ directory.

5. Prepare Prometheus Config
-------------------------------------------------------
Place the provided prometheus.yml in the prometheus/ directory.

6. (Optional) Check Dockerfile for Frontend
-------------------------------------------------------
If you want to build the frontend as a container, add a Dockerfile in frontend/ (not needed if you use Nginx to serve static files as above).

7. Start All Containers
-------------------------------------------------------
docker-compose up -d --build

8. Verify All Services
-------------------------------------------------------
- **Frontend (React via Nginx):** [http://localhost/](http://localhost/)
- **API Gateway:** [http://localhost:8080/](http://localhost:8080/)
- **Prometheus:** [http://localhost:9090/](http://localhost:9090/)
- **Grafana:** [http://localhost:3000/](http://localhost:3000/) (default login: admin/admin)
- **Nginx Exporter:** [http://localhost:9113/metrics](http://localhost:9113/metrics)
- **Blackbox Exporter:** [http://localhost:9115/](http://localhost:9115/)
- **Node Exporter:** [http://localhost:9100/metrics](http://localhost:9100/metrics)

9. Add Prometheus as a Data Source in Grafana
-------------------------------------------------------
1. Go to [http://localhost:3000/](http://localhost:3000/)
2. Login (default: admin/admin)
3. Add Prometheus as a data source (`http://prometheus:9090`)
4. Import dashboards for Spring Boot, Node Exporter, Blackbox Exporter, and Nginx Exporter from Grafana's dashboard library.

10. (Optional) View Logs
-------------------------------------------------------
To see logs for a specific service:
docker-compose logs -f <service-name>
# Example:
docker-compose logs -f auth-service

11. (Optional) Stop All Containers
-------------------------------------------------------
docker-compose down

12. (Optional) Clean Up Volumes
-------------------------------------------------------
docker-compose down -v

Summary Table
-------------------------------------------------------
| Service                | URL/Port                | Purpose                        |
|------------------------|-------------------------|--------------------------------|
| Frontend (Nginx)       | http://localhost/       | React UI                       |
| API Gateway            | http://localhost:8080/  | API entry point                |
| Prometheus             | http://localhost:9090/  | Metrics collection             |
| Grafana                | http://localhost:3000/  | Metrics dashboards             |
| Nginx Exporter         | http://localhost:9113/metrics | Nginx metrics           |
| Blackbox Exporter      | http://localhost:9115/  | HTTP endpoint probing          |
| Node Exporter          | http://localhost:9100/metrics | Host metrics             |

You're Done!
-------------------------------------------------------
Your entire stack is now running, monitored, and observable with Prometheus and Grafana.

